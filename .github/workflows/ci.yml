name: Continuous integration
on:
  push:
    branches:
      - dev

jobs:
  lint:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install SwiftLint
        run: |
          brew install swiftlint

      - name: Lint
        run: npm run lint

  build-example:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install plugin dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build

      - name: Install example dependencies
        run: npm ci
        working-directory: example

      - name: Build example
        run: npm run build
        working-directory: example

  verify-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'jetbrains'
          java-version-file: '.java-version'

      - name: Verify
        run: npm run verify:android

  # verify-ios:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 1

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Verify
  #       run: npm run verify:ios

  verify-release:
    runs-on: ubuntu-latest
    needs: [lint, verify-android, build-example] # verify-ios
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Run semantic-release dry-run
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          rm .releaserc.js

          DRY_RUN_OUTPUT=$(npx semantic-release --branches dev --dry-run 2>&1 || true)
          echo "$DRY_RUN_OUTPUT"

          RELEASE_VERSION=$(echo "$DRY_RUN_OUTPUT" | grep -oP 'The next release version is \K\d+\.\d+\.\d+' || echo "")
          echo "$RELEASE_VERSION"

          if [ -z "$RELEASE_VERSION" ]; then
            echo "No new version detected."
            echo "release_version=" >> $GITHUB_OUTPUT
          else
            echo "Detected version: $RELEASE_VERSION"
            echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Add to job summary
        if: ${{ steps.semantic_release.outputs.release_version != '' }}
        run: |
          echo "Next release version: ${{ steps.semantic_release.outputs.release_version }}" >> $GITHUB_STEP_SUMMARY
